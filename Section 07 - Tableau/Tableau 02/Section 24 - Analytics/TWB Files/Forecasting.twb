<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='AirPassengers' inline='true' name='federated.1d20c9m1tx18i91bpnu4k121syx4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='AirPassengers' name='textscan.0lhft7p0u3jxba19r4vf90h32uvc'>
            <connection class='textscan' directory='C:/Users/User/OneDrive/Desktop/PBI Best Practices' filename='AirPassengers.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0lhft7p0u3jxba19r4vf90h32uvc' name='AirPassengers.csv' table='[AirPassengers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' date-parse-format='yyyy-MM' name='Month' ordinal='0' />
            <column datatype='integer' name='#Passengers' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0lhft7p0u3jxba19r4vf90h32uvc' name='AirPassengers.csv' table='[AirPassengers#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
            <column datatype='date' date-parse-format='yyyy-MM' name='Month' ordinal='0' />
            <column datatype='integer' name='#Passengers' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[AirPassengers.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;Â£&quot;</attribute>
              <attribute datatype='string' name='debit-close-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='debit-open-char'>&quot;&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Month</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Month]</local-name>
            <parent-name>[AirPassengers.csv]</parent-name>
            <remote-alias>Month</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>#Passengers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[#Passengers]</local-name>
            <parent-name>[AirPassengers.csv]</parent-name>
            <remote-alias>#Passengers</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='AirPassengers.csv' datatype='table' name='[__tableau_internal_object_id__].[AirPassengers.csv_0B69D93E53E84A7C8B603B283B0AF879]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='AirPassengers.csv' id='AirPassengers.csv_0B69D93E53E84A7C8B603B283B0AF879'>
            <properties context=''>
              <relation connection='textscan.0lhft7p0u3jxba19r4vf90h32uvc' name='AirPassengers.csv' table='[AirPassengers#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_GB' separator=','>
                  <column datatype='date' date-parse-format='yyyy-MM' name='Month' ordinal='0' />
                  <column datatype='integer' name='#Passengers' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='AirPassengers' name='federated.1d20c9m1tx18i91bpnu4k121syx4' />
          </datasources>
          <datasource-dependencies datasource='federated.1d20c9m1tx18i91bpnu4k121syx4'>
            <column datatype='integer' name='[#Passengers]' role='measure' type='quantitative' />
            <column datatype='date' name='[Month]' role='dimension' type='ordinal' />
            <column-instance column='[#Passengers]' derivation='Sum' forecast-column-base='[sum:#Passengers:qk]' forecast-column-type='forecast-value' name='[fVal:sum:#Passengers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[#Passengers]' derivation='Sum' name='[sum:#Passengers:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Month]' derivation='Month-Trunc' name='[tmn:Month:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1d20c9m1tx18i91bpnu4k121syx4].[tmn:Month:qk]' field-type='quantitative' max='#1965-12-25 02:23:52.565#' min='#1954-08-12 06:33:32.395#' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1d20c9m1tx18i91bpnu4k121syx4].[fVal:sum:#Passengers:qk]' field-type='quantitative' max='806' min='195' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1d20c9m1tx18i91bpnu4k121syx4].[none:Forecast Indicator:nk]' />
            </encodings>
            <reference-line axis-column='[federated.1d20c9m1tx18i91bpnu4k121syx4].[fVal:sum:#Passengers:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='confidence' id='refline0' label-type='none' paired-distribution-id='refline1' probability='95' scope='per-pane' show-lines='both' symmetric='false' value-column='[federated.1d20c9m1tx18i91bpnu4k121syx4].[fVal:sum:#Passengers:qk]' z-order='1' />
            <reference-line axis-column='[federated.1d20c9m1tx18i91bpnu4k121syx4].[fVal:sum:#Passengers:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' paired-distribution-id='refline0' probability='95' scope='per-pane' value-column='[federated.1d20c9m1tx18i91bpnu4k121syx4].[fVal:sum:#Passengers:qk]' z-order='2' />
          </pane>
        </panes>
        <rows>[federated.1d20c9m1tx18i91bpnu4k121syx4].[fVal:sum:#Passengers:qk]</rows>
        <cols>[federated.1d20c9m1tx18i91bpnu4k121syx4].[tmn:Month:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='99.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-periods='Month-Trunc' range-size='6' range-type='next' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{61C6D668-5809-4BF1-AE7D-822A461A3E0C}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1d20c9m1tx18i91bpnu4k121syx4].[none:Forecast Indicator:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1d20c9m1tx18i91bpnu4k121syx4].[none:Forecast Indicator:nk]</field>
            <field>[federated.1d20c9m1tx18i91bpnu4k121syx4].[none:Month:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C4921FA-3B54-46B3-AF05-1CD0C7B58055}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
      /1Xe8nYbtCGtAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
